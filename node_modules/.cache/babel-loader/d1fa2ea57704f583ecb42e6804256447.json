{"ast":null,"code":"import { eventScope } from '../utils/';\nexport function wheelHandler(scrollbar) {\n  var addEvent = eventScope(scrollbar);\n  var target = scrollbar.options.delegateTo || scrollbar.containerEl;\n  var eventName = 'onwheel' in window || document.implementation.hasFeature('Events.wheel', '3.0') ? 'wheel' : 'mousewheel';\n  addEvent(target, eventName, function (evt) {\n    var _a = normalizeDelta(evt),\n        x = _a.x,\n        y = _a.y;\n\n    scrollbar.addTransformableMomentum(x, y, evt, function (willScroll) {\n      if (willScroll) {\n        evt.preventDefault();\n      }\n    });\n  });\n} // Normalizing wheel delta\n\nvar DELTA_SCALE = {\n  STANDARD: 1,\n  OTHERS: -3\n};\nvar DELTA_MODE = [1.0, 28.0, 500.0];\n\nvar getDeltaMode = function (mode) {\n  return DELTA_MODE[mode] || DELTA_MODE[0];\n};\n\nfunction normalizeDelta(evt) {\n  if ('deltaX' in evt) {\n    var mode = getDeltaMode(evt.deltaMode);\n    return {\n      x: evt.deltaX / DELTA_SCALE.STANDARD * mode,\n      y: evt.deltaY / DELTA_SCALE.STANDARD * mode\n    };\n  }\n\n  if ('wheelDeltaX' in evt) {\n    return {\n      x: evt.wheelDeltaX / DELTA_SCALE.OTHERS,\n      y: evt.wheelDeltaY / DELTA_SCALE.OTHERS\n    };\n  } // ie with touchpad\n\n\n  return {\n    x: 0,\n    y: evt.wheelDelta / DELTA_SCALE.OTHERS\n  };\n}","map":{"version":3,"mappings":"AAEA,SACEA,UADF,QAEO,WAFP;AAIA,OAAM,SAAUC,YAAV,CAAuBC,SAAvB,EAA6C;AACjD,MAAMC,QAAQ,GAAGH,UAAU,CAACE,SAAD,CAA3B;AAEA,MAAME,MAAM,GAAGF,SAAS,CAACG,OAAV,CAAkBC,UAAlB,IAAgCJ,SAAS,CAACK,WAAzD;AAEA,MAAMC,SAAS,GAAI,aAAaC,MAAb,IAAuBC,QAAQ,CAACC,cAAT,CAAwBC,UAAxB,CAAmC,cAAnC,EAAmD,KAAnD,CAAxB,GAAqF,OAArF,GAA+F,YAAjH;AAEAT,UAAQ,CAACC,MAAD,EAASI,SAAT,EAAoB,UAACK,GAAD,EAAgB;AACpC;AAAA,QAAEC,QAAF;AAAA,QAAKC,QAAL;;AAENb,aAAS,CAACc,wBAAV,CAAmCF,CAAnC,EAAsCC,CAAtC,EAAyCF,GAAzC,EAA8C,UAACI,UAAD,EAAW;AACvD,UAAIA,UAAJ,EAAgB;AACdJ,WAAG,CAACK,cAAJ;AACD;AACF,KAJD;AAKD,GARO,CAAR;AASD,C,CAED;;AAEA,IAAMC,WAAW,GAAG;AAClBC,UAAQ,EAAE,CADQ;AAElBC,QAAM,EAAE,CAAC;AAFS,CAApB;AAKA,IAAMC,UAAU,GAAG,CAAC,GAAD,EAAM,IAAN,EAAY,KAAZ,CAAnB;;AAEA,IAAMC,YAAY,GAAG,UAACC,IAAD,EAAK;AAAK,mBAAU,CAACA,IAAD,CAAV,IAAoBF,UAAU,CAAC,CAAD,CAA9B;AAAiC,CAAhE;;AAEA,SAASG,cAAT,CAAwBZ,GAAxB,EAAgC;AAC9B,MAAI,YAAYA,GAAhB,EAAqB;AACnB,QAAMW,IAAI,GAAGD,YAAY,CAACV,GAAG,CAACa,SAAL,CAAzB;AAEA,WAAO;AACLZ,OAAC,EAAED,GAAG,CAACc,MAAJ,GAAaR,WAAW,CAACC,QAAzB,GAAoCI,IADlC;AAELT,OAAC,EAAEF,GAAG,CAACe,MAAJ,GAAaT,WAAW,CAACC,QAAzB,GAAoCI;AAFlC,KAAP;AAID;;AAED,MAAI,iBAAiBX,GAArB,EAA0B;AACxB,WAAO;AACLC,OAAC,EAAED,GAAG,CAACgB,WAAJ,GAAkBV,WAAW,CAACE,MAD5B;AAELN,OAAC,EAAEF,GAAG,CAACiB,WAAJ,GAAkBX,WAAW,CAACE;AAF5B,KAAP;AAID,GAf6B,CAiB9B;;;AACA,SAAO;AACLP,KAAC,EAAE,CADE;AAELC,KAAC,EAAEF,GAAG,CAACkB,UAAJ,GAAiBZ,WAAW,CAACE;AAF3B,GAAP;AAID","names":["eventScope","wheelHandler","scrollbar","addEvent","target","options","delegateTo","containerEl","eventName","window","document","implementation","hasFeature","evt","x","y","addTransformableMomentum","willScroll","preventDefault","DELTA_SCALE","STANDARD","OTHERS","DELTA_MODE","getDeltaMode","mode","normalizeDelta","deltaMode","deltaX","deltaY","wheelDeltaX","wheelDeltaY","wheelDelta"],"sources":["/home/mohammad/Desktop/MARS-main/node_modules/smooth-scrollbar/src/events/wheel.ts"],"sourcesContent":["import * as I from '../interfaces/';\n\nimport {\n  eventScope,\n} from '../utils/';\n\nexport function wheelHandler(scrollbar: I.Scrollbar) {\n  const addEvent = eventScope(scrollbar);\n\n  const target = scrollbar.options.delegateTo || scrollbar.containerEl;\n\n  const eventName = ('onwheel' in window || document.implementation.hasFeature('Events.wheel', '3.0')) ? 'wheel' : 'mousewheel';\n\n  addEvent(target, eventName, (evt: WheelEvent) => {\n    const { x, y } = normalizeDelta(evt);\n\n    scrollbar.addTransformableMomentum(x, y, evt, (willScroll) => {\n      if (willScroll) {\n        evt.preventDefault();\n      }\n    });\n  });\n}\n\n// Normalizing wheel delta\n\nconst DELTA_SCALE = {\n  STANDARD: 1,\n  OTHERS: -3,\n};\n\nconst DELTA_MODE = [1.0, 28.0, 500.0];\n\nconst getDeltaMode = (mode) => DELTA_MODE[mode] || DELTA_MODE[0];\n\nfunction normalizeDelta(evt: any) {\n  if ('deltaX' in evt) {\n    const mode = getDeltaMode(evt.deltaMode);\n\n    return {\n      x: evt.deltaX / DELTA_SCALE.STANDARD * mode,\n      y: evt.deltaY / DELTA_SCALE.STANDARD * mode,\n    };\n  }\n\n  if ('wheelDeltaX' in evt) {\n    return {\n      x: evt.wheelDeltaX / DELTA_SCALE.OTHERS,\n      y: evt.wheelDeltaY / DELTA_SCALE.OTHERS,\n    };\n  }\n\n  // ie with touchpad\n  return {\n    x: 0,\n    y: evt.wheelDelta / DELTA_SCALE.OTHERS,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}