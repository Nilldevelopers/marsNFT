{"ast":null,"code":"import clamp from 'lodash-es/clamp';\nvar animationIDStorage = new WeakMap();\nexport function scrollTo(scrollbar, x, y, duration, _a) {\n  if (duration === void 0) {\n    duration = 0;\n  }\n\n  var _b = _a === void 0 ? {} : _a,\n      _c = _b.easing,\n      easing = _c === void 0 ? defaultEasing : _c,\n      callback = _b.callback;\n\n  var options = scrollbar.options,\n      offset = scrollbar.offset,\n      limit = scrollbar.limit;\n\n  if (options.renderByPixels) {\n    // ensure resolved with integer\n    x = Math.round(x);\n    y = Math.round(y);\n  }\n\n  var startX = offset.x;\n  var startY = offset.y;\n  var disX = clamp(x, 0, limit.x) - startX;\n  var disY = clamp(y, 0, limit.y) - startY;\n  var start = Date.now();\n\n  function scroll() {\n    var elapse = Date.now() - start;\n    var progress = duration ? easing(Math.min(elapse / duration, 1)) : 1;\n    scrollbar.setPosition(startX + disX * progress, startY + disY * progress);\n\n    if (elapse >= duration) {\n      if (typeof callback === 'function') {\n        callback.call(scrollbar);\n      }\n    } else {\n      var animationID = requestAnimationFrame(scroll);\n      animationIDStorage.set(scrollbar, animationID);\n    }\n  }\n\n  cancelAnimationFrame(animationIDStorage.get(scrollbar));\n  scroll();\n}\n/**\n * easeOutCubic\n */\n\nfunction defaultEasing(t) {\n  return Math.pow(t - 1, 3) + 1;\n}","map":{"version":3,"mappings":"AAAA,OAAOA,KAAP,MAAkB,iBAAlB;AAIA,IAAMC,kBAAkB,GAAG,IAAIC,OAAJ,EAA3B;AAEA,OAAM,SAAUC,QAAV,CACJC,SADI,EAEJC,CAFI,EAGJC,CAHI,EAIJC,QAJI,EAKJC,EALI,EAKiE;AADrE;AAAAD;AAAY;;MACZE;MAAEC;MAAAC;MAAwBC;;AAGxB;AAAA,MACAC,yBADA;AAAA,MAEAC,uBAFA;;AAKF,MAAIC,OAAO,CAACC,cAAZ,EAA4B;AAC1B;AACAX,KAAC,GAAGY,IAAI,CAACC,KAAL,CAAWb,CAAX,CAAJ;AACAC,KAAC,GAAGW,IAAI,CAACC,KAAL,CAAWZ,CAAX,CAAJ;AACD;;AAED,MAAMa,MAAM,GAAGN,MAAM,CAACR,CAAtB;AACA,MAAMe,MAAM,GAAGP,MAAM,CAACP,CAAtB;AAEA,MAAMe,IAAI,GAAGrB,KAAK,CAACK,CAAD,EAAI,CAAJ,EAAOS,KAAK,CAACT,CAAb,CAAL,GAAuBc,MAApC;AACA,MAAMG,IAAI,GAAGtB,KAAK,CAACM,CAAD,EAAI,CAAJ,EAAOQ,KAAK,CAACR,CAAb,CAAL,GAAuBc,MAApC;AAEA,MAAMG,KAAK,GAAGC,IAAI,CAACC,GAAL,EAAd;;AAEA,WAASC,MAAT,GAAe;AACb,QAAMC,MAAM,GAAGH,IAAI,CAACC,GAAL,KAAaF,KAA5B;AACA,QAAMK,QAAQ,GAAGrB,QAAQ,GAAGI,MAAM,CAACM,IAAI,CAACY,GAAL,CAASF,MAAM,GAAGpB,QAAlB,EAA4B,CAA5B,CAAD,CAAT,GAA4C,CAArE;AAEAH,aAAS,CAAC0B,WAAV,CACEX,MAAM,GAAGE,IAAI,GAAGO,QADlB,EAEER,MAAM,GAAGE,IAAI,GAAGM,QAFlB;;AAKA,QAAID,MAAM,IAAIpB,QAAd,EAAwB;AACtB,UAAI,OAAOK,QAAP,KAAoB,UAAxB,EAAoC;AAClCA,gBAAQ,CAACmB,IAAT,CAAc3B,SAAd;AACD;AACF,KAJD,MAIO;AACL,UAAM4B,WAAW,GAAGC,qBAAqB,CAACP,MAAD,CAAzC;AACAzB,wBAAkB,CAACiC,GAAnB,CAAuB9B,SAAvB,EAAkC4B,WAAlC;AACD;AACF;;AAEDG,sBAAoB,CAAClC,kBAAkB,CAACmC,GAAnB,CAAuBhC,SAAvB,CAAD,CAApB;AACAsB,QAAM;AACP;AAED;;;;AAGA,SAASW,aAAT,CAAuBC,CAAvB,EAAgC;AAC9B,SAAOrB,SAACqB,CAAC,GAAG,CAAL,EAAW,CAAX,IAAe,CAAtB;AACD","names":["clamp","animationIDStorage","WeakMap","scrollTo","scrollbar","x","y","duration","_a","_b","_c","easing","callback","offset","limit","options","renderByPixels","Math","round","startX","startY","disX","disY","start","Date","now","scroll","elapse","progress","min","setPosition","call","animationID","requestAnimationFrame","set","cancelAnimationFrame","get","defaultEasing","t"],"sources":["/home/mohammad/Desktop/MARS-main/node_modules/smooth-scrollbar/src/scrolling/scroll-to.ts"],"sourcesContent":["import clamp from 'lodash-es/clamp';\n\nimport * as I from '../interfaces/';\n\nconst animationIDStorage = new WeakMap<I.Scrollbar, number>();\n\nexport function scrollTo(\n  scrollbar: I.Scrollbar,\n  x: number,\n  y: number,\n  duration = 0,\n  { easing = defaultEasing, callback }: Partial<I.ScrollToOptions> = {},\n) {\n  const {\n    options,\n    offset,\n    limit,\n  } = scrollbar;\n\n  if (options.renderByPixels) {\n    // ensure resolved with integer\n    x = Math.round(x);\n    y = Math.round(y);\n  }\n\n  const startX = offset.x;\n  const startY = offset.y;\n\n  const disX = clamp(x, 0, limit.x) - startX;\n  const disY = clamp(y, 0, limit.y) - startY;\n\n  const start = Date.now();\n\n  function scroll() {\n    const elapse = Date.now() - start;\n    const progress = duration ? easing(Math.min(elapse / duration, 1)) : 1;\n\n    scrollbar.setPosition(\n      startX + disX * progress,\n      startY + disY * progress,\n    );\n\n    if (elapse >= duration) {\n      if (typeof callback === 'function') {\n        callback.call(scrollbar);\n      }\n    } else {\n      const animationID = requestAnimationFrame(scroll);\n      animationIDStorage.set(scrollbar, animationID);\n    }\n  }\n\n  cancelAnimationFrame(animationIDStorage.get(scrollbar) as number);\n  scroll();\n}\n\n/**\n * easeOutCubic\n */\nfunction defaultEasing(t: number): number {\n  return (t - 1) ** 3 + 1;\n}\n"]},"metadata":{},"sourceType":"module"}