{"ast":null,"code":"import { eventScope } from '../utils/';\nvar KEY_CODE;\n\n(function (KEY_CODE) {\n  KEY_CODE[KEY_CODE[\"TAB\"] = 9] = \"TAB\";\n  KEY_CODE[KEY_CODE[\"SPACE\"] = 32] = \"SPACE\";\n  KEY_CODE[KEY_CODE[\"PAGE_UP\"] = 33] = \"PAGE_UP\";\n  KEY_CODE[KEY_CODE[\"PAGE_DOWN\"] = 34] = \"PAGE_DOWN\";\n  KEY_CODE[KEY_CODE[\"END\"] = 35] = \"END\";\n  KEY_CODE[KEY_CODE[\"HOME\"] = 36] = \"HOME\";\n  KEY_CODE[KEY_CODE[\"LEFT\"] = 37] = \"LEFT\";\n  KEY_CODE[KEY_CODE[\"UP\"] = 38] = \"UP\";\n  KEY_CODE[KEY_CODE[\"RIGHT\"] = 39] = \"RIGHT\";\n  KEY_CODE[KEY_CODE[\"DOWN\"] = 40] = \"DOWN\";\n})(KEY_CODE || (KEY_CODE = {}));\n\nexport function keyboardHandler(scrollbar) {\n  var addEvent = eventScope(scrollbar);\n  var container = scrollbar.containerEl;\n  addEvent(container, 'keydown', function (evt) {\n    var activeElement = document.activeElement;\n\n    if (activeElement !== container && !container.contains(activeElement)) {\n      return;\n    }\n\n    if (isEditable(activeElement)) {\n      return;\n    }\n\n    var delta = getKeyDelta(scrollbar, evt.keyCode || evt.which);\n\n    if (!delta) {\n      return;\n    }\n\n    var x = delta[0],\n        y = delta[1];\n    scrollbar.addTransformableMomentum(x, y, evt, function (willScroll) {\n      if (willScroll) {\n        evt.preventDefault();\n      } else {\n        scrollbar.containerEl.blur();\n\n        if (scrollbar.parent) {\n          scrollbar.parent.containerEl.focus();\n        }\n      }\n    });\n  });\n}\n\nfunction getKeyDelta(scrollbar, keyCode) {\n  var size = scrollbar.size,\n      limit = scrollbar.limit,\n      offset = scrollbar.offset;\n\n  switch (keyCode) {\n    case KEY_CODE.TAB:\n      return handleTabKey(scrollbar);\n\n    case KEY_CODE.SPACE:\n      return [0, 200];\n\n    case KEY_CODE.PAGE_UP:\n      return [0, -size.container.height + 40];\n\n    case KEY_CODE.PAGE_DOWN:\n      return [0, size.container.height - 40];\n\n    case KEY_CODE.END:\n      return [0, limit.y - offset.y];\n\n    case KEY_CODE.HOME:\n      return [0, -offset.y];\n\n    case KEY_CODE.LEFT:\n      return [-40, 0];\n\n    case KEY_CODE.UP:\n      return [0, -40];\n\n    case KEY_CODE.RIGHT:\n      return [40, 0];\n\n    case KEY_CODE.DOWN:\n      return [0, 40];\n\n    default:\n      return null;\n  }\n}\n\nfunction handleTabKey(scrollbar) {\n  // handle in next frame\n  requestAnimationFrame(function () {\n    scrollbar.scrollIntoView(document.activeElement, {\n      offsetTop: scrollbar.size.container.height / 2,\n      onlyScrollIfNeeded: true\n    });\n  });\n}\n\nfunction isEditable(elem) {\n  if (elem.tagName === 'INPUT' || elem.tagName === 'SELECT' || elem.tagName === 'TEXTAREA' || elem.isContentEditable) {\n    return !elem.disabled;\n  }\n\n  return false;\n}","map":{"version":3,"mappings":"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","names":["eventScope","KEY_CODE","keyboardHandler","scrollbar","addEvent","container","containerEl","evt","activeElement","contains","isEditable","delta","getKeyDelta","keyCode","which","y","addTransformableMomentum","x","willScroll","preventDefault","blur","parent","focus","limit","offset","TAB","handleTabKey","SPACE","PAGE_UP","size","height","PAGE_DOWN","END","HOME","LEFT","UP","RIGHT","DOWN","requestAnimationFrame","scrollIntoView","document","offsetTop","onlyScrollIfNeeded","elem","tagName","isContentEditable","disabled"],"sources":["/home/mohammad/Desktop/MARS-main/node_modules/smooth-scrollbar/src/events/keyboard.ts"],"sourcesContent":["import * as I from '../interfaces/';\n\nimport {\n  eventScope,\n} from '../utils/';\n\nenum KEY_CODE {\n  TAB = 9,\n  SPACE = 32,\n  PAGE_UP,\n  PAGE_DOWN,\n  END,\n  HOME,\n  LEFT,\n  UP,\n  RIGHT,\n  DOWN,\n}\n\nexport function keyboardHandler(scrollbar: I.Scrollbar) {\n  const addEvent = eventScope(scrollbar);\n  const container = scrollbar.containerEl;\n\n  addEvent(container, 'keydown', (evt: KeyboardEvent) => {\n    const { activeElement } = document;\n\n    if (activeElement !== container && !container.contains(activeElement)) {\n      return;\n    }\n\n    if (isEditable(activeElement)) {\n      return;\n    }\n\n    const delta = getKeyDelta(scrollbar, evt.keyCode || evt.which);\n\n    if (!delta) {\n      return;\n    }\n\n    const [x, y] = delta;\n\n    scrollbar.addTransformableMomentum(x, y, evt, (willScroll) => {\n      if (willScroll) {\n        evt.preventDefault();\n      } else {\n        scrollbar.containerEl.blur();\n\n        if (scrollbar.parent) {\n          scrollbar.parent.containerEl.focus();\n        }\n      }\n    });\n  });\n}\n\nfunction getKeyDelta(scrollbar: I.Scrollbar, keyCode: number) {\n  const {\n    size,\n    limit,\n    offset,\n  } = scrollbar;\n\n  switch (keyCode) {\n    case KEY_CODE.TAB:\n      return handleTabKey(scrollbar);\n    case KEY_CODE.SPACE:\n      return [0, 200];\n    case KEY_CODE.PAGE_UP:\n      return [0, -size.container.height + 40];\n    case KEY_CODE.PAGE_DOWN:\n      return [0, size.container.height - 40];\n    case KEY_CODE.END:\n      return [0, limit.y - offset.y];\n    case KEY_CODE.HOME:\n      return [0, -offset.y];\n    case KEY_CODE.LEFT:\n      return [-40, 0];\n    case KEY_CODE.UP:\n      return [0, -40];\n    case KEY_CODE.RIGHT:\n      return [40, 0];\n    case KEY_CODE.DOWN:\n      return [0, 40];\n    default:\n      return null;\n  }\n}\n\nfunction handleTabKey(scrollbar: I.Scrollbar) {\n  // handle in next frame\n  requestAnimationFrame(() => {\n    scrollbar.scrollIntoView(document.activeElement as HTMLElement, {\n      offsetTop: scrollbar.size.container.height / 2,\n      onlyScrollIfNeeded: true,\n    });\n  });\n}\n\nfunction isEditable(elem: any): boolean {\n  if (elem.tagName === 'INPUT' ||\n      elem.tagName === 'SELECT' ||\n      elem.tagName === 'TEXTAREA' ||\n      elem.isContentEditable) {\n    return !elem.disabled;\n  }\n\n  return false;\n}\n"]},"metadata":{},"sourceType":"module"}