{"ast":null,"code":"import clamp from 'lodash-es/clamp';\nimport { setStyle } from '../../utils/set-style';\nvar GLOW_MAX_OPACITY = 0.75;\nvar GLOW_MAX_OFFSET = 0.25;\n\nvar Glow =\n/** @class */\nfunction () {\n  function Glow(_scrollbar) {\n    this._scrollbar = _scrollbar;\n    this._canvas = document.createElement('canvas');\n    this._ctx = this._canvas.getContext('2d');\n    setStyle(this._canvas, {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      display: 'none'\n    });\n  }\n\n  Glow.prototype.mount = function () {\n    this._scrollbar.containerEl.appendChild(this._canvas);\n  };\n\n  Glow.prototype.unmount = function () {\n    if (this._canvas.parentNode) {\n      this._canvas.parentNode.removeChild(this._canvas);\n    }\n  };\n\n  Glow.prototype.adjust = function () {\n    var size = this._scrollbar.size;\n    var DPR = window.devicePixelRatio || 1;\n    var nextWidth = size.container.width * DPR;\n    var nextHeight = size.container.height * DPR;\n\n    if (nextWidth === this._canvas.width && nextHeight === this._canvas.height) {\n      return;\n    }\n\n    this._canvas.width = nextWidth;\n    this._canvas.height = nextHeight;\n\n    this._ctx.scale(DPR, DPR);\n  };\n\n  Glow.prototype.recordTouch = function (event) {\n    var touch = event.touches[event.touches.length - 1];\n    this._touchX = touch.clientX;\n    this._touchY = touch.clientY;\n  };\n\n  Glow.prototype.render = function (_a, color) {\n    var _b = _a.x,\n        x = _b === void 0 ? 0 : _b,\n        _c = _a.y,\n        y = _c === void 0 ? 0 : _c;\n\n    if (!x && !y) {\n      setStyle(this._canvas, {\n        display: 'none'\n      });\n      return;\n    }\n\n    setStyle(this._canvas, {\n      display: 'block'\n    });\n    var size = this._scrollbar.size;\n\n    this._ctx.clearRect(0, 0, size.container.width, size.container.height);\n\n    this._ctx.fillStyle = color;\n\n    this._renderX(x);\n\n    this._renderY(y);\n  };\n\n  Glow.prototype._getMaxOverscroll = function () {\n    var options = this._scrollbar.options.plugins.overscroll;\n    return options && options.maxOverscroll ? options.maxOverscroll : 150;\n  };\n\n  Glow.prototype._renderX = function (strength) {\n    var size = this._scrollbar.size;\n\n    var maxOverscroll = this._getMaxOverscroll();\n\n    var _a = size.container,\n        width = _a.width,\n        height = _a.height;\n    var ctx = this._ctx;\n    ctx.save();\n\n    if (strength > 0) {\n      // glow on right side\n      // horizontally flip\n      ctx.transform(-1, 0, 0, 1, width, 0);\n    }\n\n    var opacity = clamp(Math.abs(strength) / maxOverscroll, 0, GLOW_MAX_OPACITY);\n    var startOffset = clamp(opacity, 0, GLOW_MAX_OFFSET) * width; // controll point\n\n    var x = Math.abs(strength);\n    var y = this._touchY || height / 2;\n    ctx.globalAlpha = opacity;\n    ctx.beginPath();\n    ctx.moveTo(0, -startOffset);\n    ctx.quadraticCurveTo(x, y, 0, height + startOffset);\n    ctx.fill();\n    ctx.closePath();\n    ctx.restore();\n  };\n\n  Glow.prototype._renderY = function (strength) {\n    var size = this._scrollbar.size;\n\n    var maxOverscroll = this._getMaxOverscroll();\n\n    var _a = size.container,\n        width = _a.width,\n        height = _a.height;\n    var ctx = this._ctx;\n    ctx.save();\n\n    if (strength > 0) {\n      // glow on bottom side\n      // vertically flip\n      ctx.transform(1, 0, 0, -1, 0, height);\n    }\n\n    var opacity = clamp(Math.abs(strength) / maxOverscroll, 0, GLOW_MAX_OPACITY);\n    var startOffset = clamp(opacity, 0, GLOW_MAX_OFFSET) * width; // controll point\n\n    var x = this._touchX || width / 2;\n    var y = Math.abs(strength);\n    ctx.globalAlpha = opacity;\n    ctx.beginPath();\n    ctx.moveTo(-startOffset, 0);\n    ctx.quadraticCurveTo(x, y, width + startOffset, 0);\n    ctx.fill();\n    ctx.closePath();\n    ctx.restore();\n  };\n\n  return Glow;\n}();\n\nexport { Glow };","map":{"version":3,"mappings":"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","names":["clamp","setStyle","GLOW_MAX_OPACITY","GLOW_MAX_OFFSET","_scrollbar","document","createElement","_canvas","getContext","position","top","left","width","height","display","Glow","containerEl","appendChild","parentNode","removeChild","DPR","window","devicePixelRatio","nextWidth","size","container","nextHeight","_ctx","scale","event","touch","touches","length","_touchX","clientX","_touchY","clientY","_a","color","_b","x","_c","y","clearRect","fillStyle","_renderX","_renderY","options","plugins","overscroll","maxOverscroll","strength","_getMaxOverscroll","ctx","save","transform","opacity","Math","abs","startOffset","globalAlpha","beginPath","moveTo","quadraticCurveTo","fill","closePath","restore"],"sources":["/home/mohammad/Desktop/MARS-main/node_modules/smooth-scrollbar/src/plugins/overscroll/glow.ts"],"sourcesContent":["import clamp from 'lodash-es/clamp';\nimport Scrollbar from 'smooth-scrollbar';\n\nimport { setStyle } from '../../utils/set-style';\n\nconst GLOW_MAX_OPACITY = 0.75;\nconst GLOW_MAX_OFFSET = 0.25;\n\nexport class Glow {\n  private _canvas = document.createElement('canvas');\n  private _ctx = this._canvas.getContext('2d') as CanvasRenderingContext2D;\n\n  private _touchX: number;\n  private _touchY: number;\n\n  constructor(\n    private _scrollbar: Scrollbar,\n  ) {\n    setStyle(this._canvas, {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      display: 'none',\n    });\n  }\n\n  mount() {\n    this._scrollbar.containerEl.appendChild(this._canvas);\n  }\n\n  unmount() {\n    if (this._canvas.parentNode) {\n      this._canvas.parentNode.removeChild(this._canvas);\n    }\n  }\n\n  adjust() {\n    const {\n      size,\n    } = this._scrollbar;\n\n    const DPR = window.devicePixelRatio || 1;\n\n    const nextWidth = size.container.width * DPR;\n    const nextHeight = size.container.height * DPR;\n\n    if (nextWidth === this._canvas.width && nextHeight === this._canvas.height) {\n      return;\n    }\n\n    this._canvas.width = nextWidth;\n    this._canvas.height = nextHeight;\n\n    this._ctx.scale(DPR, DPR);\n  }\n\n  recordTouch(event: TouchEvent) {\n    const touch = event.touches[event.touches.length - 1];\n\n    this._touchX = touch.clientX;\n    this._touchY = touch.clientY;\n  }\n\n  render({ x = 0, y = 0 }, color: string) {\n    if (!x && !y) {\n      setStyle(this._canvas, {\n        display: 'none',\n      });\n\n      return;\n    }\n\n    setStyle(this._canvas, {\n      display: 'block',\n    });\n\n    const {\n      size,\n    } = this._scrollbar;\n\n    this._ctx.clearRect(0, 0, size.container.width, size.container.height);\n    this._ctx.fillStyle = color;\n\n    this._renderX(x);\n    this._renderY(y);\n  }\n\n  private _getMaxOverscroll(): number {\n    const options = this._scrollbar.options.plugins.overscroll;\n\n    return options && options.maxOverscroll ? options.maxOverscroll : 150;\n  }\n\n  private _renderX(strength: number) {\n    const {\n      size,\n    } = this._scrollbar;\n\n    const maxOverscroll = this._getMaxOverscroll();\n    const { width, height } = size.container;\n    const ctx = this._ctx;\n\n    ctx.save();\n\n    if (strength > 0) {\n      // glow on right side\n      // horizontally flip\n      ctx.transform(-1, 0, 0, 1, width, 0);\n    }\n\n    const opacity = clamp(Math.abs(strength) / maxOverscroll, 0, GLOW_MAX_OPACITY);\n    const startOffset = clamp(opacity, 0, GLOW_MAX_OFFSET) * width;\n\n    // controll point\n    const x = Math.abs(strength);\n    const y = this._touchY || (height / 2);\n\n    ctx.globalAlpha = opacity;\n    ctx.beginPath();\n    ctx.moveTo(0, -startOffset);\n    ctx.quadraticCurveTo(x, y, 0, height + startOffset);\n    ctx.fill();\n    ctx.closePath();\n    ctx.restore();\n  }\n\n  private _renderY(strength: number) {\n    const {\n      size,\n    } = this._scrollbar;\n\n    const maxOverscroll = this._getMaxOverscroll();\n    const { width, height } = size.container;\n    const ctx = this._ctx;\n\n    ctx.save();\n\n    if (strength > 0) {\n      // glow on bottom side\n      // vertically flip\n      ctx.transform(1, 0, 0, -1, 0, height);\n    }\n\n    const opacity = clamp(Math.abs(strength) / maxOverscroll, 0, GLOW_MAX_OPACITY);\n    const startOffset = clamp(opacity, 0, GLOW_MAX_OFFSET) * width;\n\n    // controll point\n    const x = this._touchX || (width / 2);\n    const y = Math.abs(strength);\n\n    ctx.globalAlpha = opacity;\n    ctx.beginPath();\n    ctx.moveTo(-startOffset, 0);\n    ctx.quadraticCurveTo(x, y, width + startOffset, 0);\n    ctx.fill();\n    ctx.closePath();\n    ctx.restore();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}